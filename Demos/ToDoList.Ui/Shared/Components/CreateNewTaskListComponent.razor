@using ToDoList.Ui.Services;
@using ToDoList.Models;

@inject TaskListsService taskListsService
@inject NavigationManager navigationManager

<FormComponent TFormModel="CreateTaskListRequest" TSubmitResultModel="TaskListViewModel"
               OnSubmit="@OnSubmit"
               Model="model">

    <FormBody>
        <div class="task-list card text-left">
            <div class="card-header">Create new task list</div>

            <div class="col-sm-12">
                <label for="taskListName" class="form-label">Task List Name</label>
                <InputText class="form-control" id="taskListName" @bind-Value="model.Name"/>
                <ValidationMessage For="@(() => model.Name)"/>
                <div class="invalid-feedback">
                    Looks good!
                </div>
            </div>
        </div>
    </FormBody>
    <FormFooter>
    </FormFooter>
    <SubmitButtonText>
        Submit
    </SubmitButtonText>
    <SubmitButtonTextInProgress>
        Submitting...
    </SubmitButtonTextInProgress>
</FormComponent>

@code {
    public readonly CreateTaskListRequest model = new();

    private async Task<ServiceResult<TaskListViewModel>> OnSubmit(CreateTaskListRequest createTaskListViewModel)
    {
        var serviceResult = await taskListsService
            .CreateTaskList(createTaskListViewModel);

        return serviceResult;
    }

}